
#version 450

layout(local_size_x = 16, local_size_y = 16) in;
layout(set=0, binding=0, r16f) uniform readonly image2D pressureField;
layout(set=0, binding=1, rg16f) uniform readonly image2D advectedVelocityField;
layout(set=0, binding=2) uniform writeonly image2D velocityField;

layout(push_constant) uniform PushConstants {
  float width;
  float height;
  float dt;
  float sorOmega;
} pushConstants;

void main() {
  ivec2 texelPos = ivec2(gl_GlobalInvocationID.xy);
  
  // Project velocity field to be divergence free

  // TODO: Parameterize these
  const float density = 1.0;
  float h = 1.0 / pushConstants.width;

  vec2 vel = imageLoad(advectedVelocityField, texelPos).rg;
  float pR = imageLoad(pressureField, texelPos + ivec2(1, 0)).r;
  float pL = imageLoad(pressureField, texelPos + ivec2(-1, 0)).r;
  float pU = imageLoad(pressureField, texelPos + ivec2(0, 1)).r;
  float pD = imageLoad(pressureField, texelPos + ivec2(0, -1)).r;

  vel -= vec2(pR - pL, pU - pD) * pushConstants.dt / (2.0 * density * h);

  imageStore(velocityField, texelPos, vec4(vel, 0.0, 1.0));
}




