
#version 450

layout(local_size_x = 16, local_size_y = 16) in;
layout(set=0, binding=0, rgba8) uniform readonly image2D src;
layout(set=0, binding=1) uniform writeonly image2D dest;

layout(push_constant) uniform PushConstants {
  int width;
  int height;
  float time;
  float dt;
  float sorOmega;
  float density;
  float vorticity;
  bool clear;
} pushConstants;

void main() {
  ivec2 texelPos = ivec2(gl_GlobalInvocationID.xy);
  if (texelPos.x < 0 || texelPos.x >= pushConstants.width ||
      texelPos.y < 0 || texelPos.y >= pushConstants.height) {
    return;
  }

  vec4 color = imageLoad(src, texelPos);

  if (pushConstants.clear) {
    ivec2 t = ((ivec2(50) + texelPos) / 100) % 2;
    int sum = t.x + t.y;
    if (sum == 0) {
      color = vec4(1.0, 0.0, 0.0, 1.0);
    } else if (sum == 1) {
      color = vec4(1.0, 1.0, 0.0, 1.0);
      // color = vec4(10.0, 10.0, 0.0, 1.0);
    } else {
      color = vec4(0.0, 0.0, 1.0, 1.0);
      // color = vec4(0.5, 0.25, 0.9, 1.0);
    }
  }

  vec2 uvScale = vec2(1.0) / vec2(pushConstants.width, pushConstants.height);
  vec2 texelUv = (vec2(texelPos) + vec2(0.5)) * uvScale;

  if (texelUv.x <= 0.01 && texelUv.y > 0.499 && texelUv.y < 0.501) {// && pushConstants.clear) {
    // float f = sin(pushConstants.time);
    // color = vec4(1.0, f, 0.0, 1.0);
  }

  imageStore(dest, texelPos, color);
}




