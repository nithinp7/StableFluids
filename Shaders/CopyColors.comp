
#version 450

#include "SimulationCommon.glsl"

layout(local_size_x = 16, local_size_y = 16) in;

#define colorFieldA _rgba32fimageHeap[simUniforms.colorFieldImage] // dst
#define colorFieldB _rgba32fimageHeap[simUniforms.colorFieldImage+1] // src

void main() {
  ivec2 texelPos = ivec2(gl_GlobalInvocationID.xy);
  if (texelPos.x < 0 || texelPos.x >= simUniforms.width ||
      texelPos.y < 0 || texelPos.y >= simUniforms.height) {
    return;
  }

  vec4 color = imageLoad(colorFieldB, texelPos);

  // if (simUniforms.clear) {
  //   ivec2 t = ((ivec2(50) + texelPos) / 100) % 2;
  //   int sum = t.x + t.y;
  //   if (sum == 0) {
  //     color = vec4(1.0, 0.0, 0.0, 1.0);
  //   } else if (sum == 1) {
  //     color = vec4(1.0, 1.0, 0.0, 1.0);
  //     // color = vec4(10.0, 10.0, 0.0, 1.0);
  //   } else {
  //     color = vec4(0.0, 0.0, 1.0, 1.0);
  //     // color = vec4(0.5, 0.25, 0.9, 1.0);
  //   }
  // }

  vec2 uvScale = vec2(1.0) / vec2(simUniforms.width, simUniforms.height);
  vec2 texelUv = (vec2(texelPos) + vec2(0.5)) * uvScale;

  // if (texelUv.x <= 0.01 && texelUv.y > 0.499 && texelUv.y < 0.501) {// && simUniforms.clear) {
  //   // float f = sin(simUniforms.time);
  //   // color = vec4(1.0, f, 0.0, 1.0);
  // }

  imageStore(colorFieldA, texelPos, color);
}




