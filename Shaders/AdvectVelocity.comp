
#version 450

layout(local_size_x = 16, local_size_y = 16) in;
layout(set=0, binding=0) uniform sampler2D velocityField;
layout(set=0, binding=1) uniform writeonly image2D advectedVelocityField;

layout(push_constant) uniform PushConstants {
  float width;
  float height;
  float dt;
  float sorOmega;
} pushConstants;

void main() {
  ivec2 texelPos = ivec2(gl_GlobalInvocationID.xy);
  vec2 texelUv = (vec2(texelPos) + vec2(0.5)) / vec2(pushConstants.width, pushConstants.height);

  // TODO: Introduce temperature and buoyancy
  // 
  vec2 vel = texture(velocityField, texelUv).rg;
  vec2 srcUv = texelUv - vel * pushConstants.dt;
  vec2 srcVel = texture(velocityField, srcUv).rg;

  // For testing...
  if (srcUv.x <= 0.001 && srcUv.y > 0.45 && srcUv.y < 0.55) {
    srcVel = vec2(0.5, 0.0);
  }

  imageStore(advectedVelocityField, texelPos, vec4(srcVel, 0.0, 1.0));
}




